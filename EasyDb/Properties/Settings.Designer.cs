//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EasyDb.Properties
{
    /// <summary>
    /// Defines the <see cref="Settings" />
    /// </summary>
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.8.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {
        /// <summary>
        /// Defines the defaultInstance
        /// </summary>
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));

        /// <summary>
        /// Gets the Default
        /// </summary>
        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }

        /// <summary>
        /// Gets or sets the DefaultLanguage
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("en-US")]
        public global::System.Globalization.CultureInfo DefaultLanguage
        {
            get
            {
                return ((global::System.Globalization.CultureInfo)(this["DefaultLanguage"]));
            }
            set
            {
                this["DefaultLanguage"] = value;
            }
        }

        /// <summary>
        /// Gets or sets the BaseTheme
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("BaseDark")]
        public string BaseTheme
        {
            get
            {
                return ((string)(this["BaseTheme"]));
            }
            set
            {
                this["BaseTheme"] = value;
            }
        }

        /// <summary>
        /// Gets or sets the AccentTheme
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Orange")]
        public string AccentTheme
        {
            get
            {
                return ((string)(this["AccentTheme"]));
            }
            set
            {
                this["AccentTheme"] = value;
            }
        }

        /// <summary>
        /// Gets or sets the SettingsFlyoutWidthLimiter
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("25")]
        public double SettingsFlyoutWidthLimiter
        {
            get
            {
                return ((double)(this["SettingsFlyoutWidthLimiter"]));
            }
            set
            {
                this["SettingsFlyoutWidthLimiter"] = value;
            }
        }

        /// <summary>
        /// Gets or sets the PluginsPath
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("./Plugins")]
        public string PluginsPath
        {
            get
            {
                return ((string)(this["PluginsPath"]));
            }
            set
            {
                this["PluginsPath"] = value;
            }
        }

        /// <summary>
        /// Gets or sets a value indicating whether IsFirstTimeStartUp
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsFirstTimeStartUp
        {
            get
            {
                return ((bool)(this["IsFirstTimeStartUp"]));
            }
            set
            {
                this["IsFirstTimeStartUp"] = value;
            }
        }

        /// <summary>
        /// Gets or sets a value indicating whether IsStorePassword
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsStorePassword
        {
            get
            {
                return ((bool)(this["IsStorePassword"]));
            }
            set
            {
                this["IsStorePassword"] = value;
            }
        }
    }
}
